program: VOID_KW IDENT LPAR RPAR LBRACE CST WHILE_KW
##
## Ends in an error in state: 93.
##
## expression -> expression . PLUS expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . MINUS expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . STAR expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . SLASH expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . LT expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . LE expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . GT expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . GE expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . AND expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . OR expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . NEQ expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## instruction -> expression . SEMI [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
##
## The known suffix of the stack is as follows:
## expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE IDENT SEMI VOID_KW
##
## Ends in an error in state: 91.
##
## list(instruction) -> instruction . list(instruction) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## instruction
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE IDENT SET IDENT RPAR
##
## Ends in an error in state: 87.
##
## expression -> expression . PLUS expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . MINUS expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . STAR expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . SLASH expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . LT expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . LE expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . GT expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . GE expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . AND expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . OR expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . NEQ expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## instruction -> IDENT SET expression . SEMI [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
##
## The known suffix of the stack is as follows:
## IDENT SET expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 32, spurious reduction of production expression -> IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE IDENT SET WHILE_KW
##
## Ends in an error in state: 86.
##
## instruction -> IDENT SET . expression SEMI [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
##
## The known suffix of the stack is as follows:
## IDENT SET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE IDENT WHILE_KW
##
## Ends in an error in state: 85.
##
## expression -> IDENT . [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> IDENT . LPAR loption(separated_nonempty_list(COMMA,expression)) RPAR [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## instruction -> IDENT . SET expression SEMI [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE IF_KW LPAR BOOL RPAR LBRACE RBRACE ELSE_KW WHILE_KW
##
## Ends in an error in state: 83.
##
## instruction -> IF_KW delimited_expr block ELSE_KW . block [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
##
## The known suffix of the stack is as follows:
## IF_KW delimited_expr block ELSE_KW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE IF_KW LPAR BOOL RPAR LBRACE RBRACE VOID_KW
##
## Ends in an error in state: 82.
##
## instruction -> IF_KW delimited_expr block . [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
## instruction -> IF_KW delimited_expr block . ELSE_KW block [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
##
## The known suffix of the stack is as follows:
## IF_KW delimited_expr block
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE IF_KW LPAR BOOL RPAR WHILE_KW
##
## Ends in an error in state: 81.
##
## instruction -> IF_KW delimited_expr . block [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
## instruction -> IF_KW delimited_expr . block ELSE_KW block [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
##
## The known suffix of the stack is as follows:
## IF_KW delimited_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE IF_KW WHILE_KW
##
## Ends in an error in state: 80.
##
## instruction -> IF_KW . delimited_expr block [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
## instruction -> IF_KW . delimited_expr block ELSE_KW block [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
##
## The known suffix of the stack is as follows:
## IF_KW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE PUTCHAR_KW LPAR BOOL RPAR WHILE_KW
##
## Ends in an error in state: 78.
##
## instruction -> PUTCHAR_KW delimited_expr . SEMI [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
##
## The known suffix of the stack is as follows:
## PUTCHAR_KW delimited_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE PUTCHAR_KW WHILE_KW
##
## Ends in an error in state: 77.
##
## instruction -> PUTCHAR_KW . delimited_expr SEMI [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
##
## The known suffix of the stack is as follows:
## PUTCHAR_KW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE RBRACE VOID_KW IDENT WHILE_KW
##
## Ends in an error in state: 14.
##
## decl_function -> decl . params fun_block [ VOID_KW INT_KW EOF BOOL_KW ]
##
## The known suffix of the stack is as follows:
## decl
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE RBRACE WHILE_KW
##
## Ends in an error in state: 12.
##
## nonempty_list(decl_function) -> decl_function . [ EOF ]
## nonempty_list(decl_function) -> decl_function . nonempty_list(decl_function) [ EOF ]
##
## The known suffix of the stack is as follows:
## decl_function
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE RETURN_KW IDENT RPAR
##
## Ends in an error in state: 75.
##
## expression -> expression . PLUS expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . MINUS expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . STAR expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . SLASH expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . LT expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . LE expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . GT expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . GE expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . AND expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . OR expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . NEQ expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## instruction -> RETURN_KW expression . SEMI [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
##
## The known suffix of the stack is as follows:
## RETURN_KW expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 32, spurious reduction of production expression -> IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE RETURN_KW WHILE_KW
##
## Ends in an error in state: 74.
##
## instruction -> RETURN_KW . expression SEMI [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
##
## The known suffix of the stack is as follows:
## RETURN_KW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE SLASH
##
## Ends in an error in state: 23.
##
## fun_block -> LBRACE . list(decl_var_local) list(instruction) RBRACE [ VOID_KW INT_KW EOF BOOL_KW ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE VOID_KW IDENT SEMI SLASH
##
## Ends in an error in state: 98.
##
## list(decl_var_local) -> decl_var_local . list(decl_var_local) [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
##
## The known suffix of the stack is as follows:
## decl_var_local
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE VOID_KW IDENT SET IDENT RPAR
##
## Ends in an error in state: 102.
##
## decl_var_local -> decl SET expression . SEMI [ WHILE_KW VOID_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR INT_KW IF_KW IDENT CST BOOL_KW BOOL ]
## expression -> expression . PLUS expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . MINUS expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . STAR expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . SLASH expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . LT expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . LE expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . GT expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . GE expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . AND expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . OR expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . NEQ expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
##
## The known suffix of the stack is as follows:
## decl SET expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 32, spurious reduction of production expression -> IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE VOID_KW IDENT SET WHILE_KW
##
## Ends in an error in state: 101.
##
## decl_var_local -> decl SET . expression SEMI [ WHILE_KW VOID_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR INT_KW IF_KW IDENT CST BOOL_KW BOOL ]
##
## The known suffix of the stack is as follows:
## decl SET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE VOID_KW IDENT WHILE_KW
##
## Ends in an error in state: 100.
##
## decl_var_local -> decl . SEMI [ WHILE_KW VOID_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR INT_KW IF_KW IDENT CST BOOL_KW BOOL ]
## decl_var_local -> decl . SET expression SEMI [ WHILE_KW VOID_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR INT_KW IF_KW IDENT CST BOOL_KW BOOL ]
##
## The known suffix of the stack is as follows:
## decl
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE WHILE_KW LPAR IDENT RPAR LBRACE VOID_KW
##
## Ends in an error in state: 73.
##
## block -> LBRACE . list(instruction) RBRACE [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT ELSE_KW CST BOOL ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE WHILE_KW LPAR IDENT RPAR WHILE_KW
##
## Ends in an error in state: 72.
##
## instruction -> WHILE_KW delimited_expr . block [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
##
## The known suffix of the stack is as follows:
## WHILE_KW delimited_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR LBRACE WHILE_KW WHILE_KW
##
## Ends in an error in state: 25.
##
## instruction -> WHILE_KW . delimited_expr block [ WHILE_KW STAR RETURN_KW RBRACE PUTCHAR_KW NOT MINUS LPAR IF_KW IDENT CST BOOL ]
##
## The known suffix of the stack is as follows:
## WHILE_KW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR RPAR WHILE_KW
##
## Ends in an error in state: 22.
##
## decl_function -> decl params . fun_block [ VOID_KW INT_KW EOF BOOL_KW ]
##
## The known suffix of the stack is as follows:
## decl params
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR VOID_KW IDENT COMMA WHILE_KW
##
## Ends in an error in state: 20.
##
## separated_nonempty_list(COMMA,decl) -> decl COMMA . separated_nonempty_list(COMMA,decl) [ RPAR ]
##
## The known suffix of the stack is as follows:
## decl COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR VOID_KW IDENT WHILE_KW
##
## Ends in an error in state: 19.
##
## separated_nonempty_list(COMMA,decl) -> decl . [ RPAR ]
## separated_nonempty_list(COMMA,decl) -> decl . COMMA separated_nonempty_list(COMMA,decl) [ RPAR ]
##
## The known suffix of the stack is as follows:
## decl
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT LPAR WHILE_KW
##
## Ends in an error in state: 15.
##
## params -> LPAR . loption(separated_nonempty_list(COMMA,decl)) RPAR [ LBRACE ]
##
## The known suffix of the stack is as follows:
## LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SEMI WHILE_KW
##
## Ends in an error in state: 10.
##
## program -> decl_var_glob . program [ # ]
##
## The known suffix of the stack is as follows:
## decl_var_glob
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT AND CST WHILE_KW
##
## Ends in an error in state: 66.
##
## expression -> expression . PLUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . MINUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . STAR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . SLASH expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . AND expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression AND expression . [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . OR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . NEQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression AND expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT AND WHILE_KW
##
## Ends in an error in state: 65.
##
## expression -> expression AND . expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT DOUBLE_EQ CST WHILE_KW
##
## Ends in an error in state: 64.
##
## expression -> expression . PLUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . MINUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . STAR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . SLASH expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . AND expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . OR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression DOUBLE_EQ expression . [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . NEQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression DOUBLE_EQ expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT DOUBLE_EQ WHILE_KW
##
## Ends in an error in state: 63.
##
## expression -> expression DOUBLE_EQ . expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression DOUBLE_EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT GE CST WHILE_KW
##
## Ends in an error in state: 62.
##
## expression -> expression . PLUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . MINUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . STAR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . SLASH expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression GE expression . [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . AND expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . OR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . NEQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression GE expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT GE WHILE_KW
##
## Ends in an error in state: 61.
##
## expression -> expression GE . expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression GE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT GT CST WHILE_KW
##
## Ends in an error in state: 60.
##
## expression -> expression . PLUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . MINUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . STAR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . SLASH expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression GT expression . [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . AND expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . OR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . NEQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression GT expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT GT WHILE_KW
##
## Ends in an error in state: 59.
##
## expression -> expression GT . expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression GT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT LE CST WHILE_KW
##
## Ends in an error in state: 58.
##
## expression -> expression . PLUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . MINUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . STAR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . SLASH expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression LE expression . [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . AND expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . OR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . NEQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression LE expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT LE WHILE_KW
##
## Ends in an error in state: 57.
##
## expression -> expression LE . expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression LE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT LPAR IDENT COMMA WHILE_KW
##
## Ends in an error in state: 67.
##
## separated_nonempty_list(COMMA,expression) -> expression COMMA . separated_nonempty_list(COMMA,expression) [ RPAR ]
##
## The known suffix of the stack is as follows:
## expression COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT LPAR IDENT SEMI
##
## Ends in an error in state: 41.
##
## expression -> expression . PLUS expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . MINUS expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . STAR expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . SLASH expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LT expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LE expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GT expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GE expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . AND expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . OR expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . NEQ expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## separated_nonempty_list(COMMA,expression) -> expression . [ RPAR ]
## separated_nonempty_list(COMMA,expression) -> expression . COMMA separated_nonempty_list(COMMA,expression) [ RPAR ]
##
## The known suffix of the stack is as follows:
## expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 32, spurious reduction of production expression -> IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT LPAR WHILE_KW
##
## Ends in an error in state: 33.
##
## expression -> IDENT LPAR . loption(separated_nonempty_list(COMMA,expression)) RPAR [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## IDENT LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT LT CST WHILE_KW
##
## Ends in an error in state: 56.
##
## expression -> expression . PLUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . MINUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . STAR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . SLASH expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression LT expression . [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . AND expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . OR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . NEQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression LT expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT LT WHILE_KW
##
## Ends in an error in state: 55.
##
## expression -> expression LT . expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression LT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT MINUS CST WHILE_KW
##
## Ends in an error in state: 54.
##
## expression -> expression . PLUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . MINUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression MINUS expression . [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . STAR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . SLASH expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . AND expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . OR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . NEQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression MINUS expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT MINUS WHILE_KW
##
## Ends in an error in state: 53.
##
## expression -> expression MINUS . expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT NEQ CST WHILE_KW
##
## Ends in an error in state: 52.
##
## expression -> expression . PLUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . MINUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . STAR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . SLASH expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . AND expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . OR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . NEQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression NEQ expression . [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression NEQ expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT NEQ WHILE_KW
##
## Ends in an error in state: 51.
##
## expression -> expression NEQ . expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression NEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT OR CST WHILE_KW
##
## Ends in an error in state: 50.
##
## expression -> expression . PLUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . MINUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . STAR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . SLASH expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . AND expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . OR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression OR expression . [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . NEQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression OR expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT OR WHILE_KW
##
## Ends in an error in state: 49.
##
## expression -> expression OR . expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression OR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT PLUS CST WHILE_KW
##
## Ends in an error in state: 48.
##
## expression -> expression . PLUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression PLUS expression . [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . MINUS expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . STAR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . SLASH expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . LE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GT expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . GE expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . AND expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . OR expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . NEQ expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression PLUS expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT PLUS WHILE_KW
##
## Ends in an error in state: 47.
##
## expression -> expression PLUS . expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT RPAR
##
## Ends in an error in state: 108.
##
## decl_var_glob -> decl SET expression . SEMI [ VOID_KW INT_KW BOOL_KW ]
## expression -> expression . PLUS expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . MINUS expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . STAR expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . SLASH expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . LT expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . LE expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . GT expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . GE expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . AND expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . OR expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . NEQ expression [ STAR SLASH SEMI PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
##
## The known suffix of the stack is as follows:
## decl SET expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 32, spurious reduction of production expression -> IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT SLASH WHILE_KW
##
## Ends in an error in state: 45.
##
## expression -> expression SLASH . expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression SLASH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT STAR WHILE_KW
##
## Ends in an error in state: 42.
##
## expression -> expression STAR . expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## expression STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET IDENT WHILE_KW
##
## Ends in an error in state: 32.
##
## expression -> IDENT . [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
## expression -> IDENT . LPAR loption(separated_nonempty_list(COMMA,expression)) RPAR [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET LPAR IDENT SEMI
##
## Ends in an error in state: 70.
##
## delimited_expr -> LPAR expression . RPAR [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE LBRACE GT GE DOUBLE_EQ COMMA AND ]
## expression -> expression . PLUS expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . MINUS expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . STAR expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . SLASH expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . LT expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . LE expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . GT expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . GE expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . AND expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . OR expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . DOUBLE_EQ expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
## expression -> expression . NEQ expression [ STAR SLASH RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ AND ]
##
## The known suffix of the stack is as follows:
## LPAR expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 32, spurious reduction of production expression -> IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET LPAR WHILE_KW
##
## Ends in an error in state: 26.
##
## delimited_expr -> LPAR . expression RPAR [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE LBRACE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET MINUS WHILE_KW
##
## Ends in an error in state: 30.
##
## expression -> MINUS . CST [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET NOT WHILE_KW
##
## Ends in an error in state: 29.
##
## expression -> NOT . expression [ STAR SLASH SEMI RPAR PLUS OR NEQ MINUS LT LE GT GE DOUBLE_EQ COMMA AND ]
##
## The known suffix of the stack is as follows:
## NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET STAR WHILE_KW
##
## Ends in an error in state: 27.
##
## nonempty_list(STAR) -> STAR . [ IDENT ]
## nonempty_list(STAR) -> STAR . nonempty_list(STAR) [ IDENT ]
##
## The known suffix of the stack is as follows:
## STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT SET WHILE_KW
##
## Ends in an error in state: 107.
##
## decl_var_glob -> decl SET . expression SEMI [ VOID_KW INT_KW BOOL_KW ]
##
## The known suffix of the stack is as follows:
## decl SET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW IDENT WHILE_KW
##
## Ends in an error in state: 106.
##
## decl_function -> decl . params fun_block [ VOID_KW INT_KW EOF BOOL_KW ]
## decl_var_glob -> decl . SEMI [ VOID_KW INT_KW BOOL_KW ]
## decl_var_glob -> decl . SET expression SEMI [ VOID_KW INT_KW BOOL_KW ]
##
## The known suffix of the stack is as follows:
## decl
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VOID_KW WHILE_KW
##
## Ends in an error in state: 4.
##
## decl -> type_def . IDENT [ SET SEMI RPAR LPAR COMMA ]
## type_def -> type_def . STAR [ STAR IDENT ]
##
## The known suffix of the stack is as follows:
## type_def
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: WHILE_KW
##
## Ends in an error in state: 0.
##
## program' -> . program [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

